<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAIFQTFRF////
        AAAA7u7u7+/v7e3tg4OD+vr6+fn58/Pz9vb2z8/P+vn69/b3ubm54uLiKioq2trakZGRnp6eiYmJYmJi
        rq6uxsbGWlpadnZ2PT09JCQkpqamlpaWHh4ed3d3y8vLTk5OEBAQ3t7eODg4a2trvr6+OTk5UVFRMDAw
        GBgYZ2dngFE9NQAAC7dJREFUeF7tne1im7gShm0gGNImTdK0SU7apN1NT7N7/xd4JGawBAgxI41kefc8
        P5qpADOvR99IeDdQ1XXVjFZdjVZwWlNVmNaoNLQ0c2tyXvx9XWkA9Wxq2sTzrhssF119vgrHKLXDv9uc
        ncKm66nagLbr8Tuh3oOaBphcZY7EpIUB34m4LyoNE83hGIsZuzmHfvjDv++aVe2UVhRrZIdZ8KkyTIpl
        lFVLKVRf22GwZDjUFdeDFasecin/urnVrLcIgbQd5Am+L1Ordje/bCsdfF+mFmi1ElUTPB5uVKs2WBtp
        3SGucvFw6MBBsi+ONMAKrDm7OhYFb1oyeQPHFiTYP8Ao1DkXLHO2Py0HVF/W/fvnK1RHMKZWxI952pmm
        PuHDYGWh9vriTdOJy7qUmJYXvn+QZsJpVTdb1mkUhnga2KepurQV6ArdWMjonioCFDbVx+Fvfg6YD6me
        agt6bYv867XEO2gM4N5UT7UFWsmX6KE7DG9ORa+coXhqLIAadlUCh7+npGNmVYB6dnXaAAJ9SoWSQ8Bw
        oCKn+gzw8nQZkH1W1pioUhcnmrTmVG2Ei3FibsNnLW7SbV2G2KSduA6d01N81ml2i+8/+yS9GA/jwNHn
        s06jz9OUiUvh1KLP05SJsxxOLIyP87C6Gq3TN/NuxqdaLu+PFmACa4Yo6hy0ShU4eraWQcEC/ApL5/8K
        Na78a8ph6Ti9N+VQWcvDpn6thz8ls3yIPtOhoukJcbmVjAGCsJZVt2Yxzod/s0JnOTxa54PLe21hpJyH
        m9I62+u0no4n4Aqx6DPd1LSgxqUDcB0pacC7zXr/DVg/cl6s61jPv+eFU4eyFomqu3Y+tcxIe1wiOFHk
        Xk/TFDDxy6df6NCWu8UvdsjrB5c1zBXqQC4UDv+eHa1bIfS/NSb/nlNLaONaEwda7URFwjxaNTc313Wy
        b7Azc0vHwAHTwA6GNP3l7f3THnl/uPiKX64sjuVwgK2wSvANH64eUJvF0538d9k2BIXyebT+jJoW3N/g
        KWJ0Kwrtcijd1vcvKMfJj2s8TYpFtens00jyBaWs8hlPFGNabbrnaeQ4OMrfnJ/CYbSLnCKtwj9QxAZX
        eLoMfoWytdsvVLDJBV4gwlzRpBzKjus3i6DhES+RoNVCBkuXSMyVSSoZhkBZiZq5ogRFcPcVfScimlGX
        ihIoJFYyhi94oQwZFP5Ex+n8gVeKMFckXw7v0W0GPyV7U5YiZY01j+AdmIUQkCuKOBaGulRFE8Mp2Ba2
        6DMTuXxqpk/tFl+wLVwdTPj5L14eD2gBhTqQwpXM7oAes7nEDxACFEL/W5Y7dJjNb/wAIaAcjqakSn5L
        MSLnhYqfnTXVfwWH9pfobgB3+BHxdDqDGqq6EmwqHtHdAL7jR8TTLhSiJcF/0N0Q5EbDU4Wic6TX6GwQ
        cr3Tj2PUdHUjW5eSx70uRIcY0E7oJkO2PQxs7oEn/BAR5n0aKQI63Rb4ISKkUvgn+hqG5HJyUChfDj+h
        r2FITrlbfRrRdRfhPRqN4OSp/WVJ7nft0dVABDvfqdYilKMwGehqIKKzNYkop6YBdFUqm2GPT3qDkGwt
        dO97mKeRbQ53hMdNHvBDZNANolIoPYkR1WuTm6rRDINEpVB4V1rQTOKI7PPSHvo00s+1Cxk9adpEW0Zi
        RsDyVWkKLtDbAD7hRxROETNRaXlHf/mcRybd7Z7RXzb3+AGiCA8OBwIfzOz34kuk2rrZJalOA4P4gJcL
        UqkWP0EMQxsM6RVgCt2nSVK4g6rTW7xYkq5OtaY7YGb/HS8VBd9NmAL+KDGdL2lo0G8yX/HC8+EGPSfy
        jJedE6xRlPgq0ywwJKaoRkdSlm9yRk3X4W6btPtjalqNmnCOtK1S7wAitItPteic+wxhhfXV3dv7X/sn
        q+a/3HqMYVWi1/dqDPxw+0Wy9yapsH02efK39bHfMM3Jm+lStdbcwK2YSDl9H2dC7PZtdQXRhbWYYFbz
        PibohkexDNS77eKlY+7m3l6i375hquGxpHdvVc6Z/G94FLh+vvgbD+x/P36bDnav8MCUcp5DrY2VPi1c
        bD/0/fJxbL32IKCUrpyn7/JGmUHwVEUSnbn4usbfc3nZqDF6/0LG6N6OQJ9mc5j08AvPdHCz2SOI3TEk
        0B5+R1d8vLy61kLc3FKujWw14hVSn6X9+fnKrv1fv/3AA1tErpKKVsgc537/8XLx4523HiWuQo3OozHP
        mahEOxkDa/dWKEnm+qmgD4k5YRc1Swj3+7/xdicgbgkbnaggxsx5R61J4BDeeeubXcyraI5jheTgDfl0
        lX78FErkGj0OwRPiw2oTtPkEP+rlE9xgKIURm57iFnTzwFtyaaMWfAXvUAvhJM9tXvHmWZjOiGQiYmEQ
        n5MsJaIOf2RItWjbB946E+Hzbk3oyzCYI8NYgiZshi16VV2FPRfJ1OseCXpxBqwvDd0+GrGPMgi8LYth
        jfCwFDqEvBVNWFWjtKk+TVWF7ZDFG2cjYATVNjFrhNmrSWKRfdUSgYhlsmFk79W4nxYlJG7/bECLmHHo
        BPCXZtrVS8CzyKy9Ug1/YR+2gnqbZcgQMefgEMAbM5i/n4ZH3P6tEPhdr7idznH7mUPgb+U1O51DFP6F
        980HvyyBQnjvAJ+4fZQh8Ds19vtp+CMovG1GmAr7SdZU4USLSvCWinBe8dZEdAY18N9PcwKFvFH+4v00
        3EFi8Qpn7xjS74niBbEAhf6YqKBhOQxtLfC2GZnXNNs1D7QTuskIUZjjAf6UeZu2/W4CaA+NQl6DkXsS
        Y7+f++fb6AbnzhXy6prfeN984I2P+B5lgBZQqIshxJ/XYJx+9OSJ4QEU2X2ao0wyWZ/LaBZbMry1x1yR
        Diezusn6bE3D69LMFQUozF7V4G2JSCjMPBX1hrclMlcUUA5zt4hM9yxFykJTJTacmYKsj2YYIWxrS5Gq
        S1U0MZw6sKxBFGX9qxSMEOo+t61I/2P+zyqMGSf2PQupF0wV2fM0bIX5ZvZZ2xONDlAI/W9NQHWTqSjy
        6lGjA8rh0RwThz9UsjQZF4zde8tfswTswPI64NfpqxvWYqG13wqyFXJnbBJ3wR9YBef42iSfwrpmSuxv
        0ZkEvDGnEJX7boWTwhmwpvbqc4oOzsszd45TNYVWJYPRV9YiMeRln93l1+e7CyFun3+9on8c2iH3WeEa
        2gkVzUVguV9dKYCuaZFz92nSvNElOfgeE5LCdL9QmJCP+DKhuUJXOQxeCXZK2hpjaJVDLW6wZolgnSPr
        OqaBRdlnyLoO15GS9opvAw0cT2FzThJxgnRdoSv/NpI/eZGYFodEznKoLIe44+GzweW9tty/yz0P8Tng
        8l5b7hb/n6VQB3Jd4Tn0UMHHdYXQ/9Y4c3L5PVRnT8ZYoHX1MFilQ/F+LcT4BRQOxXvKOeVC8d5/TrnV
        jb+SAQvw5+SmVInjgNDrvfuwo34tE7/PkKai6QnxPNil4fdZW1t9GmOVNq9hVsz4vacrLGzqpoV86PdZ
        W+55GpdVxbyaQJyuAw1+n7UF5xFOBKskeD5vBxusMnIqjMypPgPUs4sojD3EhuozQD1b9OdKA+mw2aP6
        DFDzdFM10r9Kw+TQKB8Gi+ozuS41Vn/C+XDoP1I91dbWPI3LaupThVH/loOG6qm26C2+sZoTlcZW3Zcy
        mJhaW/M0axZ8l3lR3yzZP2NtztN4rbzw/dMWaGVdcrS4KxoiaLsA/9ACOGE/WuPXkwF1W75/aAH864yV
        A75XxgL41xkrbV7l9UFdFsDP3caqunSd1cPGdC/FIs/T+NPSYe4R6p+KJjPsTquTzqxtz2/dXVZIn2Zq
        gR/akOzL9eoW5SkES4bquEGS44vLos/TrFnzT43Mrh+gywu+aTi+uCzwinUJxQpTCVfx7+a3gLUQh1p1
        1TFHke1hubpXxgL41/ktZaC1HU04Q1UsQgVvbgH86/yWMtBf7TlUsrD4E0G710teB8tcQb0H1QL415Et
        ZYLlLC38z2Nau93/AFvahT3Bs5GGAAAAAElFTkSuQmCC
</value>
  </data>
</root>